
.speaker_main {
  padding-inline: 2rem;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  align-items: center;
  &__infos {
    display: flex;
    flex-direction: column;
    &-name {
      margin-block-end: 0;
    }
    &-school {
      margin-block-end: 0;
    }
  }
  &__portrait {
    display: flex;
    flex-direction: column;
    img {
      width: 50%;
      align-self: end;
      border-radius: 100%;
      margin-block: 1rem;
    }
    button {
      display: none;
    }
  }
}
.speaker_details {
  background: var(--detail-color);
  padding-inline: 2rem;
  &__description {
    display: flex;
    flex-direction: column;
  }
  &__footer {
    display: flex;
    justify-content: space-between;
    &_practical {
      display: flex;
      gap: 1rem;
      &:before {
        font-family: 'codeconf' !important;
        content: "\e900"; // refaire icomoon, ne fonctionne pas horloge, mais ok si autre code 
      }
    }
  }
}

.hidden {
  display: none;
}

.speaker_details {
  padding-block: 2rem;
  &__description {
    display: flex;
  }
  &__footer {
    display: flex;
    &_btn {
      padding: 1rem;
      background: var(--detail-color);
      border-radius: 50px;
      border: 1px solid var(--cta2-color);
      color: var(--cta2-color);

    }
  }
}

@media screen and (min-width: 650px) {
  .speakers_all {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
    padding-inline: 2rem;
  }
  .speaker_main {
    display: flex;
    flex-direction: column-reverse;
    padding: 0;
    &__portrait {
      position: relative;
      img {
        border-radius: 0;
        width: 100%;
        object-fit: cover;
      }
      button {
        display: flex;
        position: absolute;
        inset: 60% 35%;
        border-radius: 360rem;
        background: var(--cta1-color);
        border: none;
        width: fit-content;
        align-self: center;
        color: white;
        padding-inline: 3rem;
        padding-block: 2rem;
        max-width: 3rem;
        justify-content: center;
      }
    }
    &__infos {
      display: flex;
      align-self: start;
      //padding-block-end: 2rem;
    }
  }
}

@media screen and (min-width: 1000px) {
  .speakers_all {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 2rem;
    padding-inline: 2rem;
  }
}

/*.speaker_main {
  //border: 1px solid green;
  //background: var(--bg-color);
  &__content {
    display: flex;
    justify-content: space-between;
    padding-inline: 1rem;
    padding-block-end: 2rem;
    align-items: center;
    background: var(--bg-color);
  }
  &__btn_hover {
    display: none;
    border: none;
    word-wrap: wrap;
    width: 4rem;
    height: 4rem;
    border-radius: 100%;
    background: var(--cta1-color);
    color: white;
    position: absolute;
    inset: 50%; //ça marcherait si le bouton était dans la même div que l'image hu hu hu ... go changer la structure de ma carte speaker là
  }
  &__img {
    // n'existe plus pour le moment, je dois refaire ma structure (mercredi, ajd je fatigue trop je n'arrive plus à me concentrer
    position: relative;
  }
  & img {
    width: 20%;
    border-radius: 360px;
  }
}

.speaker_detail {
  //onclick display flex ? ou jouer avec la hauteur et les overflow hidden pour mettre des transitions ?
  display: none;
  //display: flex;
  flex-direction: column;
  background: var(--detail-color);
  padding-inline: 1rem;
  padding-block-end: 2rem;
  &__footer {
    display: flex;
    justify-content: space-between;
    button {
      height: fit-content;
      padding-block: 0.5rem;
      padding-inline: 1rem;
      align-self: end;
    }
  }
}

@media screen and (min-width: 650px) {
  .speakers_all {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
    padding-inline: 2rem;
  }
  .speaker_main {
    padding: 1rem;
    position: relative;
    &__content {
      display: flex;
      flex-direction: column-reverse;
      padding-block: 0;
      padding-inline: 0;
      & img {
        border-radius: 0;
        width: 100%;
      }
    }
    .speaker_main__content:hover {
      .speaker_main__btn_hover {
        display: block;
      }
    }
  }
  .speaker_detail {
    &__footer {
      button {
        align-self: center;
      }
    }
  }
}

@media screen and (min-width: 1024px) {
  .speakers_all {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
  }
}
// media query : reverse column dans le container lui-même et grid template change sur le parent pour 4 columns*/
